CFLAGS= -Wall -fpic -coverage -lm -std=c99

rngs.o: rngs.h rngs.c
	gcc -c rngs.c -g  $(CFLAGS)

dominion.o: dominion.h dominion.c rngs.o
	gcc -c dominion.c -g  $(CFLAGS)

playdom: dominion.o playdom.c
	gcc -o playdom playdom.c -g dominion.o rngs.o $(CFLAGS)
#To run playdom you need to entere: ./playdom <any integer number> like ./playdom 10*/

# ================== ADDED THIS ==================
unitTest1: unittest1.c dominion.o rngs.o
    gcc -o unitTest1 -g unittest1.c dominion.o rngs.o $(CFLAGS)

unitTestResults: unitTest1
    ./unitTest1 &> unittestresult.out
    gcov -b dominion.c >> unittestresult.out
    cat dominion.c.gcov >> unittestresult.out
	
unitTest2: unittest2.c dominion.o rngs.o
    gcc -o unitTest2 -g unittest2.c dominion.o rngs.o $(CFLAGS)

unitTestResults: unitTest2
    ./unitTest2 &> unittestresult.out
    gcov -b dominion.c >> unittestresult.out
    cat dominion.c.gcov >> unittestresult.out

unitTest3: unittest3.c dominion.o rngs.o
    gcc -o unitTest3 -g unittest3.c dominion.o rngs.o $(CFLAGS)

unitTestResults: unitTest3
    ./unitTest3 &> unittestresult.out
    gcov -b dominion.c >> unittestresult.out
    cat dominion.c.gcov >> unittestresult.out
	
unitTest4: unittest4.c dominion.o rngs.o
    gcc -o unitTest4 -g unittest4.c dominion.o rngs.o $(CFLAGS)

unitTestResults: unitTest4
    ./unitTest4 &> unittestresult.out
    gcov -b dominion.c >> unittestresult.out
    cat dominion.c.gcov >> unittestresult.out
# ================== ADDED THIS ==================

interface.o: interface.h interface.c
	gcc -c interface.c -g  $(CFLAGS)

player: player.c interface.o
	gcc -o player player.c -g  dominion.o rngs.o interface.o $(CFLAGS)

all: playdom player 

clean:
	rm -f *.o playdom.exe playdom player player.exe  *.gcov *.gcda *.gcno *.so *.out 
